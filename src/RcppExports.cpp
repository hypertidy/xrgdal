// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// GDALOpen_cpp
SEXP GDALOpen_cpp(CharacterVector dsn, IntegerVector sds);
RcppExport SEXP _xrgdal_GDALOpen_cpp(SEXP dsnSEXP, SEXP sdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type dsn(dsnSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sds(sdsSEXP);
    rcpp_result_gen = Rcpp::wrap(GDALOpen_cpp(dsn, sds));
    return rcpp_result_gen;
END_RCPP
}
// xrgdal_Warp
SEXP xrgdal_Warp(SEXP xp, NumericVector extent, IntegerVector dimension, CharacterVector projection);
RcppExport SEXP _xrgdal_xrgdal_Warp(SEXP xpSEXP, SEXP extentSEXP, SEXP dimensionSEXP, SEXP projectionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type extent(extentSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimension(dimensionSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type projection(projectionSEXP);
    rcpp_result_gen = Rcpp::wrap(xrgdal_Warp(xp, extent, dimension, projection));
    return rcpp_result_gen;
END_RCPP
}
// xrgdal_RasterIO
SEXP xrgdal_RasterIO(SEXP xp, SEXP window);
RcppExport SEXP _xrgdal_xrgdal_RasterIO(SEXP xpSEXP, SEXP windowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< SEXP >::type window(windowSEXP);
    rcpp_result_gen = Rcpp::wrap(xrgdal_RasterIO(xp, window));
    return rcpp_result_gen;
END_RCPP
}
// xrgdal_RasterSize
SEXP xrgdal_RasterSize(SEXP xp);
RcppExport SEXP _xrgdal_xrgdal_RasterSize(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(xrgdal_RasterSize(xp));
    return rcpp_result_gen;
END_RCPP
}
// xrgdal_GDALClose
SEXP xrgdal_GDALClose(SEXP xp);
RcppExport SEXP _xrgdal_xrgdal_GDALClose(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(xrgdal_GDALClose(xp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xrgdal_GDALOpen_cpp", (DL_FUNC) &_xrgdal_GDALOpen_cpp, 2},
    {"_xrgdal_xrgdal_Warp", (DL_FUNC) &_xrgdal_xrgdal_Warp, 4},
    {"_xrgdal_xrgdal_RasterIO", (DL_FUNC) &_xrgdal_xrgdal_RasterIO, 2},
    {"_xrgdal_xrgdal_RasterSize", (DL_FUNC) &_xrgdal_xrgdal_RasterSize, 1},
    {"_xrgdal_xrgdal_GDALClose", (DL_FUNC) &_xrgdal_xrgdal_GDALClose, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_xrgdal(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
